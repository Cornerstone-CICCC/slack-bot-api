// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Program {
  id        Int       @id @default(autoincrement())
  title     String
  code      String?
  classeId  Int?      @unique
  createdAt DateTime  @default(now())
  sections  Section[]
}

model Section {
  id                Int                 @id @default(autoincrement())
  title             String
  code              String?
  classeId          Int?                @unique
  programId         Int
  createdAt         DateTime            @default(now())
  Program           Program             @relation(fields: [programId], references: [id])
  subjects          Subject[]
  SectionEnrollment SectionEnrollment[]
}

model Subject {
  id                Int                 @id @default(autoincrement())
  title             String
  code              String?
  credits           Int?
  type              String
  classeId          Int                 @unique
  sectionId         Int
  createdAt         DateTime            @default(now())
  Section           Section             @relation(fields: [sectionId], references: [id])
  Grade             Grade[]
  SubjectEnrollment SubjectEnrollment[]
}

model Student {
  id                Int                 @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String              @unique
  gender            String?
  dob               DateTime?
  address           String?
  zipCode           String?
  contact           String?
  advisorName       String?
  citizenship       String?
  sinNumber         String?
  studyPermitDate   DateTime?
  workPermitDate    DateTime?
  classeId          Int                 @unique
  studentId         Int
  status            String?             @default("active")
  enrolledProgram   String?
  createdAt         DateTime            @default(now())
  lastUpdatedAt     DateTime            @default(now())
  SubjectEnrollment SubjectEnrollment[]
  Grade             Grade[]
  SectionEnrollment SectionEnrollment[]
}

model SubjectEnrollment {
  id                        Int               @id @default(autoincrement())
  studentId                 Int
  subjectId                 Int
  classeSubjectId           Int
  sectionEnrollmentId       Int
  classeSectionEnrollmentId Int
  status                    String?           @default("Not Set")
  Student                   Student           @relation(fields: [studentId], references: [id])
  Subject                   Subject           @relation(fields: [subjectId], references: [id])
  SectionEnrollment         SectionEnrollment @relation(fields: [sectionEnrollmentId], references: [id])
}

model SectionEnrollment {
  id                Int                 @id @default(autoincrement())
  studentId         Int
  sectionId         Int
  classeSectionId   Int
  classeId          Int                 @unique
  status            String?             @default("Not Set")
  enrolledAt        DateTime?
  Student           Student             @relation(fields: [studentId], references: [id])
  Section           Section             @relation(fields: [sectionId], references: [id])
  SubjectEnrollment SubjectEnrollment[]
}

model Grade {
  id           Int        @id @default(autoincrement())
  studentId    Int
  score        Int
  subjectId    Int
  assessmentId Int
  gradeId      String     @unique
  Assessment   Assessment @relation(fields: [assessmentId], references: [id])
  Subject      Subject    @relation(fields: [subjectId], references: [id])
  Student      Student    @relation(fields: [studentId], references: [id])
}

model Assessment {
  id            Int      @id @default(autoincrement())
  name          String
  classeId      Int      @unique
  weight        Int
  points        Int
  passingPoints Int
  createdAt     DateTime @default(now())
  Grade         Grade[]
}
